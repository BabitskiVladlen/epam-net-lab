Attention: development is continued...
This project is custom MVC-platform is named "RpR" (Request-Preparation-Response)
which is based on simple social network "Say".

Implemented features:

	RpR PipeLine:
	- AsyncHttpHandler (for .rpr-extension) invokes RequestEngineFactory
	- RequestEngineFactory (dynamic search by all assemblies and types) creates RequestEngine instance
		and invokes MethodInvoker
	- MethodInvoker (Action invoker) searches corresponding RequestEngine method (Get(), Post() etc.) and invoke ModelBinder
	- Model-binder (including binding of simple .net-types, binding of complex models and HttpFileCollections)
		binds parameters to querystring's (or form's) values
	- MethodInvoker invokes RequestEngine method
	- RequestEngine is base class. Sublclasses create instances of ResponseEngine
	- ResponseEngine is abstract  class. Subclasses:
		ContentResponseEngine, RedirectResponseEgine (cache-based dictionary "Stash" for stateful), FileResponseEngine etc.
	- RequestEngineFactory invokes ResponseEngine.GetResponse() method which usually use custom ResponseStrategies and Response classes
	- ResponseStrategies class is based on special symbols:  [  /]. For example: main content may be here: [main /]
	
	 Data Access Layer:
	- Basic repositories -- Users, Roles, Messages, Friends (+ EF)
	
	Business Logic Layer:
	- Corresponding services which extends repositroies logic
	- Security is based on IIdentity and IPrincipal, also
		it supports default authentication and registration modules, which use
		ValidatorFactory (BLL/Security/Validators) including
		PasswordValidator, EmailValidator etc.
	- BLL/Tools: custom image-compressor, SMTP-"processor" for email sending
	- Wrapper for Http-context for unit-tests
	- Some unit-tests of BLL
	
To-do list

	-Say:
	more features for social network
	pure js (Ajax and API History for valid handling of back-forward buttons in web-browsers)

	- BLL:
	More unit-tests

	
	
	
	
	
	
	
	
	
	
	
	
	